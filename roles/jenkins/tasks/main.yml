---
- name: Install packages for node machine
  apt: pkg="{{item}}" state=present update_cache=true

  with_items: 
    - maven
    - git
    - npm
    - python-dev
    - python-pip
    - python-setuptools
    - python-lxml
    - vim
    - html-xml-utils
    - python3-setuptools
  become: true

- name: Adding Apt Key For Jenkins
  apt_key:
    url: "https://jenkins-ci.org/debian/jenkins-ci.org.key"
    state: present
    validate_certs: no
  become: true

- name: Check For Jenkins List    
  stat: path=/etc/apt/sources.list.d/jenkins.list
  register: jenkins_list

- name: Adding Jenkins Source List
  shell: sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  when: not jenkins_list.stat.exists
  become: true

- name: Set MySQL root password before installing
  debconf: name='mysql-server' question='mysql-server/root_password' value='{{mysql_root_pass | quote}}' vtype='password'
  become: true

- name: Confirm MySQL root password before installing
  debconf: name='mysql-server' question='mysql-server/root_password_again' value='{{mysql_root_pass | quote}}' vtype='password'
  become: true

- name: install mysql server
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - mysql-server
  register: last_result
  become: yes
  
- name: install client and libs
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - mysql-client
    - python-mysqldb
  become: yes

- name: insert skip grant tables in my.cnf
  lineinfile: 
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    insertafter: 'skip-external-locking'
    line: 'skip-grant-tables'
  become: true

- name: restarting mysql
  service:
    name: mysql
    enabled: yes
    state: restarted
  become: yes

- name: Installing Jenkins
  apt:
    name: jenkins     
    state: present
    update_cache: yes
  register: jenkins_install
  become: true

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  become: true

- name: Wait while re-starting Jenkins
  wait_for: 
    port: 8080 
    delay: 30

- name: Create Directory For Groovy Script - Jenkins
  file:
    path: "{{jenkins_path}}/init.groovy.d"
    state: directory
    mode: 0755
  register: groovy_dir
  become: true

- name: Copying Groovy Script For Deafult Jenkins User(ADMIN) Creation
  template:
    force: yes
    src: "{{ project_directory }}/roles/jenkins/templates/jenkins_user.groovy.j2"
    dest: "{{jenkins_path}}/init.groovy.d/basic-security.groovy"
    mode: 0755
  become: true
# khelan comment
- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  become: true

- name: Wait while re-starting Jenkins
  wait_for: 
    port: 8080 
    delay: 30

- name: Removing Groovy Script so it doesn't create furthermore user
  file:
    path: "{{jenkins_path}}/init.groovy.d/basic-security.groovy"
    state: absent
  become: true

- name: Getting Jenkins CLI Jar
  get_url:
    url: "{{jenkins_url}}/jnlpJars/jenkins-cli.jar"
    dest: "~/"
    mode: 0755
#  become: true
#  when: groovy_dir.changed

#Khelan comment
- name: Wait while re-starting Jenkins
  wait_for: 
    port: 8080 
    delay: 30


# - name: pip version
#   shell: 'pip install jenkins-job-builder'
#   #register: pip_version

#- debug:
#    msg=pip_version.stdout

- name: Install pip3
  shell: 'easy_install3 pip'
  become: true

- pip:
    name: jenkins-job-builder
  become: true

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  become: true

- name: Wait while re-starting Jenkins
  wait_for: 
    port: 8080 
    delay: 40

- name: Install Jenkin Plugins
  jenkins_plugin:
    name: "{{ item }}"
    params: "{{ jenkins_params }}"
    url_password: "{{jenkins_password}}"
    url: "{{jenkins_url}}"
  with_items:
    - github
    - maven-plugin
    - jacoco
    - junit
    - test-stability
    - postbuildscript
    - build-timeout
    - postbuild-task
    - ws-cleanup
    - jenkins-job-builder
    - html-xml-utils
    - ansible
  become: true
    
- name: Configure Jenkins port
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^HTTP_PORT=8080'
    line: 'HTTP_PORT=8090'
  become: true

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  become: true

- name: Checking Jenkins State
  service:
    name: jenkins
    state: started
  become: true

- name: Copy private SSH Key for GitHub
  copy:
    src: ~/.ssh/git_rsa
    dest: /root/.ssh/git_rsa
    mode: 0400
  become: true

- name: Add the identity file inconfiguration
  shell: 'sudo su && cd /root/.ssh && eval "$(ssh-agent -s)" && ssh-add -k /root/.ssh/git_rsa'
  become: true

- name: Add config file for ssh for github ncsu host
  copy:
    src: "{{ project_directory }}/roles/jenkins/templates/config"
    dest: /root/.ssh/config
  become: true

- name: Copy jenkins_jobs.ini file to jenkins server
  template:
    src: "{{ project_directory }}/roles/jenkins/templates/jenkins_jobs.ini"
    dest: ~/jenkins_jobs.ini

- name: create jobs folder to create jobs if it doesn't exit
  file:
    path: ~/jobs
    state: directory
